{"version":3,"sources":["components/Navbar.jsx","components/Title.jsx","components/Secondscreen.jsx","components/Thirdscreen.jsx","App.js","index.js"],"names":["Navbar","AppBar","color","position","Toolbar","Typography","variant","align","useStyles","makeStyles","theme","Song","margin","Title","marginBottom","Container","left","top","textAlign","transform","checked","setSecondscreen","classes","song_title","Fade","in","timeout","maxWidth","className","Button","fullWidth","onClick","height","Secondscreen","secondscreen","setLinks","setThirdscreen","composer","links","console","log","interpreter_name","map","interpreter","size","spotify","embed_spotify_link","youtube","embed_youtube_link","interpreters","Avatar","alt","src","interpreter_image","Tabs","Thirdscreen","thirdscreen","useState","value","setValue","Paper","square","indicatorColor","textColor","onChange","event","newValue","aria-label","Tab","label","CardMedia","component","Spinner","App","setChecked","setSong","consumeAPI","a","fetch","api","json","songoftheday","useEffect","CssBaseline","CircularProgress","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ac7c790.chunk.js","sourcesContent":["import { Fragment } from \"react\";\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\n\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n\r\n    return ( \r\n        <Fragment>\r\n            <AppBar color=\"primary\" position=\"relative\">\r\n                <Toolbar>\r\n                <nav>\r\n                <Typography variant=\"h6\" align='center'>\r\n            Song of the day\r\n          </Typography>\r\n                </nav>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Fragment>\r\n\r\n\r\n     );\r\n}\r\n\r\n\r\n \r\nexport default Navbar;","import { Typography, Container, Button, Fade } from '@material-ui/core';\r\nimport FreeBreakfastIcon from '@material-ui/icons/FreeBreakfast';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    Song:{\r\n        color:'#48c774',\r\n        margin:'20px'\r\n\r\n    },\r\n    Title:{\r\n        marginBottom:'20px'\r\n        \r\n    },\r\n    Container:{\r\n        margin: 0,\r\n        position: 'absolute',\r\n        left: '50%', \r\n        top: '40%',\r\n        textAlign:'center',\r\n        transform: 'translate(-50%, -50%)'\r\n    },\r\n\r\n\r\n}));\r\n\r\n\r\nconst Title = ({Song, checked, setSecondscreen}) => {\r\n    const classes = useStyles();\r\n\r\n    const {song_title} = Song\r\n\r\n    return ( \r\n        <Fade in={checked} timeout={2000}>\r\n            <main>\r\n                \r\n                <Container maxWidth=\"md\" className={classes.Container}>\r\n                    <div >\r\n                \r\n                        <Typography variant=\"h2\" > The song of the day is: </Typography>\r\n                        <Typography variant=\"h3\" className={classes.Song}>{song_title}</Typography>\r\n                        <Typography variant=\"h4\" className={classes.Title}>Enjoy it! <FreeBreakfastIcon /></Typography>\r\n                        <Button variant=\"outlined\" color=\"primary\" fullWidth onClick={setSecondscreen}>\r\n                            Next\r\n                        </Button>\r\n                    \r\n                   \r\n                        </div>\r\n                </Container>\r\n            \r\n            </main>\r\n\r\n</Fade>\r\n     );\r\n}\r\n \r\nexport default Title;","import { Typography, Container, Button, Fade, Avatar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container:{\r\n        margin: 0,\r\n        position: 'absolute',\r\n        left: '50%', \r\n        top: '40%',\r\n        textAlign:'center',\r\n        transform: 'translate(-50%, -50%)'\r\n    },\r\n    Button:{\r\n        height:'60px',\r\n    },\r\n    Title:{\r\n        margin:'20px'\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nconst Secondscreen = ({secondscreen, Song, setLinks, setThirdscreen}) => {\r\n    const classes = useStyles();\r\n    \r\n\r\n    const {composer, links} = Song\r\n    console.log(links)\r\n\r\n    const SETLinks = (spotify, youtube) =>{\r\n    setLinks(\r\n        {\r\n            spotify:spotify, \r\n            youtube:youtube\r\n        })\r\n    setThirdscreen(true);\r\n\r\n    }\r\n\r\n    return (\r\n        <Fade in={secondscreen} timeout={2000}>\r\n            <main>\r\n                \r\n                <Container maxWidth=\"md\" className={classes.Container}>\r\n                    <div >\r\n            \r\n                        <Typography variant=\"h4\" className={classes.Title}>Composer: <strong> {composer.interpreter_name} </strong> </Typography>\r\n                        <Typography variant=\"h4\" className={classes.Title}>Interpreters (select one): </Typography>\r\n\r\n\r\n                        {links.map(interpreter =>\r\n                            <Button \r\n                                size=\"large\" \r\n                                className={classes.Button} \r\n                                fullWidth \r\n                                onClick={() => SETLinks(interpreter.embed_spotify_link, interpreter.embed_youtube_link)}\r\n                            >\r\n                                {interpreter.interpreters[0].interpreter_name} \r\n                                <Avatar \r\n                                    className={classes.Title} \r\n                                    alt={interpreter.interpreters[0].interpreter_name} \r\n                                    src={interpreter.interpreters[0].interpreter_image} \r\n                                />\r\n                            </Button>\r\n                        )}\r\n                        \r\n                    \r\n                   \r\n                        </div>\r\n                </Container>\r\n            \r\n            </main>\r\n\r\n        </Fade>\r\n     );\r\n}\r\n\r\n\r\n \r\nexport default Secondscreen;","import {useState} from 'react'\r\nimport { Container, Fade, CardMedia, Tabs, Tab, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({ \r\n    Tabs:{\r\n        margin:'30px'\r\n    }\r\n\r\n\r\n}));\r\n\r\nconst Thirdscreen = ({thirdscreen, links}) => {\r\n    const classes = useStyles();\r\n\r\n    const {spotify, youtube} = links\r\n\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return ( \r\n\r\n\r\n        <Fade in={thirdscreen} timeout={2000}\r\n            \r\n        >\r\n        <main>\r\n            \r\n            <Container maxWidth=\"md\" className={classes.Container}>\r\n                <div >\r\n                \r\n                    <Paper square>\r\n                <Tabs\r\n                    className={classes.Tabs}\r\n                    value={value}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    onChange={handleChange}\r\n                    aria-label=\"disabled tabs example\"\r\n                >\r\n                  { youtube ? <Tab label=\"Youtube\" />:null}\r\n                  { spotify ? <Tab label=\"Spotify\" />:null}\r\n                </Tabs>\r\n                </Paper>\r\n\r\n                {value===0?\r\n                <CardMedia\r\n                    component='iframe'\r\n                    height=\"600\"\r\n                    src={youtube}\r\n                />\r\n                :\r\n                <CardMedia\r\n                    component='iframe'\r\n                    height=\"600\"\r\n                    src={spotify}\r\n                    />\r\n                }\r\n\r\n        \r\n                \r\n               \r\n                </div>\r\n            </Container>\r\n        \r\n        </main>\r\n\r\n</Fade>\r\n     );\r\n}\r\n\r\n \r\nexport default Thirdscreen;","import { Fragment, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {  CssBaseline, CircularProgress } from '@material-ui/core';\r\nimport Navbar from './components/Navbar';\r\nimport Title from './components/Title';\r\nimport Secondscreen from './components/Secondscreen';\r\nimport Thirdscreen from './components/Thirdscreen';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Spinner:{\r\n        position: 'absolute', \r\n        left: '50%', \r\n        top: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    },\r\n\r\n\r\n}));\r\n\r\nconst App = () =>{\r\n    //state for page load\r\n    const [checked, setChecked] = useState(false);\r\n    //state for song\r\n    const [Song, setSong] = useState({});\r\n    //state for second screen\r\n    const [secondscreen, setSecondscreen] = useState(false);   \r\n    //state for set third screen\r\n    const [thirdscreen, setThirdscreen] = useState(false);\r\n    //state for links\r\n    const [links, setLinks] = useState({})\r\n\r\n    //Consume rest API\r\n    const consumeAPI = async () =>{\r\n        try{\r\n            //Get song\r\n            const api = await fetch('https://songs-project-backend.herokuapp.com/songoftheday/');\r\n            const songoftheday = await api.json();\r\n            setSong(songoftheday[0]);\r\n\r\n            \r\n            setChecked(true);\r\n        }catch(err){\r\n\r\n            //if cant consume REST API, set song default\r\n            setSong(\r\n                {\r\n                    \"id\": 39,\r\n                    \"composer\": {\r\n                        \"interpreter_name\": \"Wayne Shorter\",\r\n                        \"interpreter_image\": \"https://songs-project-backend.herokuapp.com/media/artistimages/Wayne_Shorter.jpg\"\r\n                    },\r\n                    \"links\": [\r\n                        {\r\n                            \"interpreters\": [\r\n                                {\r\n                                    \"interpreter_name\": \"Wayne Shorter\",\r\n                                    \"interpreter_image\": \"https://songs-project-backend.herokuapp.com/media/artistimages/Wayne_Shorter.jpg\"\r\n                                }\r\n                            ],\r\n                            \"embed_youtube_link\": \"https://www.youtube.com/embed/k0q8mGUHJVQ\",\r\n                            \"embed_spotify_link\": \"https://open.spotify.com/embed/track/4W7mDQgJwaLNHuweyq5Yzj\"\r\n                        }\r\n                    ],\r\n                    \"song_title\": \"Yes and no\",\r\n                    \"date_song\": \"30-03\"\r\n                }\r\n\r\n            )\r\n            setChecked(true);\r\n        }\r\n\r\n    }    \r\n    //when page loads\r\n    useEffect(() => {\r\n        consumeAPI();\r\n    }, [])\r\n\r\n\r\n    const classes = useStyles();\r\n    return(\r\n        <Fragment>\r\n        <CssBaseline />\r\n            <Navbar />\r\n\r\n        {\r\n        // for load\r\n        !checked ?\r\n    \r\n        <CircularProgress \r\n           className={classes.Spinner}\r\n        \r\n        />\r\n\r\n\r\n        :\r\n\r\n        !thirdscreen ?\r\n            \r\n             !secondscreen ?\r\n            <Title \r\n                Song = {Song}\r\n                checked = {checked}\r\n                setSecondscreen = {setSecondscreen}\r\n            /> :\r\n\r\n                \r\n            <Secondscreen\r\n            secondscreen={secondscreen}\r\n            Song= {Song}\r\n            \r\n            setLinks={setLinks}\r\n            setThirdscreen={setThirdscreen}\r\n            \r\n            />\r\n            \r\n                 :\r\n\r\n                <Thirdscreen\r\n                thirdscreen={thirdscreen}\r\n                links={links}\r\n                \r\n                />\r\n            \r\n        }\r\n\r\n            \r\n        \r\n\r\n        </Fragment>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))\r\n"],"sourceRoot":""}